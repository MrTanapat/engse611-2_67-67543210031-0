const tabButtons = document.querySelectorAll('.tab-btn');

tabButtons.forEach(button => {
  button.addEventListener('click', function() {
    // Remove active class from all buttons and panes
    document.querySelectorAll('.tab-btn').forEach(btn => {
      btn.classList.remove('active');
    });
    
    document.querySelectorAll('.tab-pane').forEach(pane => {
      pane.classList.remove('active');
    });
    
    // Add active class to current button and corresponding pane
    this.classList.add('active');
    const tabId = this.getAttribute('data-tab');
    document.getElementById(tabId).classList.add('active');
  });
});


/* Slid Bar*/
let currentSlide = 0;
const slides = document.querySelectorAll('.slide');
const dots = document.querySelectorAll('.dot');
let slideInterval;

function showSlide(index) {
  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
  if (index < 0) {
    currentSlide = slides.length - 1;
  } else if (index >= slides.length) {
    currentSlide = 0;
  } else {
    currentSlide = index;
  }
  
  // ‡∏•‡∏ö‡∏Ñ‡∏•‡∏≤‡∏™ active ‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏™‡πÑ‡∏•‡∏î‡πå‡πÅ‡∏•‡∏∞‡∏à‡∏∏‡∏î
  slides.forEach(slide => {
    slide.classList.remove('active');
  });
  
  dots.forEach(dot => {
    dot.classList.remove('active');
  });
  
  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏•‡∏≤‡∏™ active ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏™‡πÑ‡∏•‡∏î‡πå‡πÅ‡∏•‡∏∞‡∏à‡∏∏‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
  slides[currentSlide].classList.add('active');
  dots[currentSlide].classList.add('active');
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° event listeners
document.querySelector('.next').addEventListener('click', () => {
  showSlide(currentSlide + 1); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πÑ‡∏•‡∏î‡πå‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
  resetTimer();
});

document.querySelector('.prev').addEventListener('click', () => {
  showSlide(currentSlide - 1); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πÑ‡∏•‡∏î‡πå‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
  resetTimer();
});

dots.forEach(dot => {
  dot.addEventListener('click', function() {
    const slideIndex = parseInt(this.getAttribute('data-index'));
    showSlide(slideIndex); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏™‡πÑ‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å dot
    resetTimer();
  });
});

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡πÑ‡∏•‡∏î‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
function startSlideTimer() {
  slideInterval = setInterval(() => {
    showSlide(currentSlide + 1); // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏™‡πÑ‡∏•‡∏î‡πå‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏ó‡∏∏‡∏Å ‡πÜ 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  }, 3000);
}

function resetTimer() {
  clearInterval(slideInterval); // ‡∏´‡∏¢‡∏∏‡∏î‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏î‡∏¥‡∏°
  startSlideTimer(); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡∏°‡πà
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡πÑ‡∏•‡∏î‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
startSlideTimer();


// Todo-List
// ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Todo
let todos = JSON.parse(localStorage.getItem('todos')) || [];

// ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Elements
const taskInput = document.getElementById('taskInput');
const addTaskBtn = document.getElementById('addTask');
const todoList = document.getElementById('todoList');
const clearCompletedBtn = document.getElementById('clearCompleted');
const clearAllBtn = document.getElementById('clearAll');

// ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Todo
function renderTodos() {
  todoList.innerHTML = '';
  todos.forEach((todo, index) => {
    const li = document.createElement('li');
    if (todo.completed) {
      li.classList.add('completed');
    }

    li.innerHTML = `
      <span>${todo.text}</span>
      <div class="task-actions">
        <button class="toggle" data-index="${index}">${todo.completed ? '‚Ü©Ô∏è' : '‚úì'}</button>
        <button class="delete" data-index="${index}">üóëÔ∏è</button>
      </div>
    `;

    todoList.appendChild(li);
  });
  saveTodos();
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° Todo ‡πÉ‡∏´‡∏°‡πà
addTaskBtn.addEventListener('click', () => {
  const taskText = taskInput.value.trim();
  if (taskText !== '') {
    const newTodo = {
      text: taskText,
      completed: false,
    };
    todos.push(newTodo);
    taskInput.value = '';
    renderTodos();
  }
});

// ‡∏•‡∏ö Todo ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
todoList.addEventListener('click', (e) => {
  if (e.target.classList.contains('delete')) {
    const index = e.target.getAttribute('data-index');
    todos.splice(index, 1);
    renderTodos();
  }

  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á Todo ‡πÄ‡∏õ‡πá‡∏ô completed ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏Å‡∏±‡∏ô
  if (e.target.classList.contains('toggle')) {
    const index = e.target.getAttribute('data-index');
    todos[index].completed = !todos[index].completed;
    renderTodos();
  }
});

// ‡∏•‡πâ‡∏≤‡∏á Todo ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
clearCompletedBtn.addEventListener('click', () => {
  todos = todos.filter(todo => !todo.completed);
  renderTodos();
});

// ‡∏•‡πâ‡∏≤‡∏á Todo ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
clearAllBtn.addEventListener('click', () => {
  todos = [];
  renderTodos();
});

// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Todo ‡∏•‡∏á‡πÉ‡∏ô localStorage
function saveTodos() {
  localStorage.setItem('todos', JSON.stringify(todos));
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
renderTodos();